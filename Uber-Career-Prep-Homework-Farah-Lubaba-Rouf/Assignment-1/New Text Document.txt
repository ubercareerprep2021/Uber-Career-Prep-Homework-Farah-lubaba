public class Sierpinski {

    // Height of an equilateral triangle whose sides are of the specified length. 
    public static double height(double length) {

      double h=(Math.sqrt(3)*length)/2.0;
      return h;
    }

    // Draws a filled equilateral triangle whose bottom vertex is (x, y) 
    // of the specified side length. 
    public static void filledTriangle(double x, double y, double length) {

    /* 
         * WARNING: before submitting this file to Autolab comment out 
     *          all calls to StdDraw methods 
         */
    
        double [] arrayX=new double [3];
        double [] arrayY=new double [3];
        double h= height(length);
        double midX=x;
        double midY=y+h;
        arrayX[0]=x;
        arrayX[1]=midX-length/2;
        arrayX[2]=midX+length/2;
        arrayY[0]=y;
        arrayY[1]=midY;
        arrayY[2]=midY;
        StdDraw.filledPolygon (arrayX,arrayY);

           
           } 


    

    // Draws a Sierpinski triangle of order n, such that the largest filled 
    // triangle has bottom vertex (x, y) and sides of the specified length. 
    public static void sierpinski(int n, double x, double y, double length) {
    if(n==0) {
            return;
    }
    filledTriangle(x,y,length);
    sierpinski(n-1,x+length/2,y,length/2);
    sierpinski(n-1,x-length/2,y,length/2);
    sierpinski(n-1,x,y+height(length),length/2);
    // WRITE YOUR CODE HERE
    }

    // Takes an integer command-line argument n; 
    // draws the outline of an equilateral triangle (pointed upwards) of length 1; 
    // whose bottom-left vertex is (0, 0) and bottom-right vertex is (1, 0); and 
    // draws a Sierpinski triangle of order n that fits snugly inside the outline. 
    public static void main(String[] args) {

    int n = Integer.parseInt(args[0]);
    double x[]={0,0.5,1};
    double y[]={0,height(1),0};
    StdDraw.polygon(x,y);
    sierpinski(n,0.5,0,0.5);

}
}